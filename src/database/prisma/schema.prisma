// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
    binaryTargets = ["native", "debian-openssl-3.0.x", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id         String   @id @unique @default(cuid())
  email      String   @unique
  Quizes     Quiz[]
  flashcards Flashcard[]
  tasks      Task[]      
  
}
model Flashcard {
  id     String @id @default(cuid())
  Quesn  String
  Ans    String
  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Quesn_Atoms {
  id     String  @id @unique @default(cuid())
  Quesn  String
  Answer String
  Option1 String
  Option2 String
  Option3 String
  Quiz   Quiz?   @relation(fields: [quizId], references: [id])
  quizId String?
}

model Quiz {
  createdAt  DateTime      @default(now()) // Timestamp when the quiz is generated
  id        String        @id @unique @default(cuid())
  QuizQuesn Quesn_Atoms[]
  User      User?         @relation(fields: [userId], references: [id])
  userId    String?
  QuizName String?
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  completed   Boolean  @default(false)
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}